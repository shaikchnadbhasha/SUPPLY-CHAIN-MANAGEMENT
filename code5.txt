import numpy as np
from sklearn.linear_model import LinearRegression
import random

# Historical weekly demand data (Weeks 1-6)
weeks = np.array([1, 2, 3, 4, 5, 6]).reshape(-1, 1)
demand = np.array([120, 130, 145, 160, 170, 185])

# Train AI demand forecast model
model = LinearRegression()
model.fit(weeks, demand)

# Forecast demand for next week (Week 7)
next_week = np.array([[7]])
forecasted_demand = int(model.predict(next_week)[0])

# Simulated IoT sensor data: current stock level
current_stock = random.randint(50, 200)
print(f"Forecasted Demand for Week 7: {forecasted_demand} units")
print(f"Current Stock Level (from IoT): {current_stock} units")

# Decision logic for restocking
safety_stock = 30
required_stock = forecasted_demand + safety_stock

if current_stock < required_stock:
    restock_qty = required_stock - current_stock
    print(f"⚠️ Restock needed: Order {restock_qty} units.")
else:
    print("✅ Stock is sufficient. No restocking required.")
